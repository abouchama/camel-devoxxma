{
  "apiVersion" : "v1",
  "kind" : "Template",
  "metadata" : {
    "annotations" : {
      "fabric8.camel-devoxx/summary" : "Camel route using Spring XML in a standalone Java container",
      "description" : "# Java Camel Spring QuickStart\n\nThis quickstart run in a Java standalone container, using Spring with Apache Camel.\n\nThis example is implemented using solely a Spring XML file (there is no custom Java code).\nThe source code is provided in the following XML file `src/main/resources/META-INF/spring/camel-context.xml`,\nwhich can be viewed from [github](https://github.com/fabric8io/ipaas-quickstarts/blob/master/quickstart/java/camel-spring/src/main/resources/META-INF/spring/camel-context.xml).\n\nThis example uses a timer to trigger a message every 5th second that is routed using a content based router, based on\nthe message is regarded as high priority or not.\n\n\n### Building\n\nNavigate to the $IPAAS_QUICKSTART/quickstart/java/camel-spring/ folder and the example can be built with\n\n    mvn clean install\n\n\n### Running the example locally\n\nThe example can be run locally using the following Maven goal:\n\n    mvn exec:java\n\n\n### Running the example in fabric8\n\nIt is assumed a running Kubernetes platform is already running. If not you can find details how to [get started](http://fabric8.io/guide/getStarted/index.html).\n\nThe example can be built and deployed using a single goal:\n\n    mvn -Pf8-local-deploy\n\nWhen the example runs in fabric8, you can use the OpenShift client tool to inspect the status\n\nTo list all the running pods:\n\n    oc get pods\n\nThen find the name of the pod that runs this quickstart, and output the logs from the running pods with:\n\n    oc logs <name of pod>\n\nYou can also use the fabric8 [web console](http://fabric8.io/guide/console.html) to manage the\nrunning pods, and view logs and much more.\n\n\n### More details\n\nYou can find more details about running this [quickstart](http://fabric8.io/guide/quickstarts/running.html) on the website. This also includes instructions how to change the Docker image user and registry.\n\n",
      "fabric8.camel-devoxx/iconUrl" : "img/icons/camel.svg"
    },
    "labels" : { },
    "name" : "camel-devoxx"
  },
  "objects" : [ {
    "apiVersion" : "v1",
    "kind" : "Service",
    "metadata" : {
      "annotations" : {
        "prometheus.io/port" : "9779",
        "prometheus.io/scrape" : "true",
        "fabric8.io/iconUrl" : "img/icons/camel.svg"
      },
      "labels" : {
        "provider" : "fabric8",
        "project" : "camel-devoxx",
        "version" : "1.0-SNAPSHOT",
        "group" : "quickstarts"
      },
      "name" : "camel-devoxx"
    },
    "spec" : {
      "clusterIP" : "None",
      "deprecatedPublicIPs" : [ ],
      "externalIPs" : [ ],
      "ports" : [ {
        "port" : 9779,
        "targetPort" : 9779
      } ],
      "selector" : {
        "project" : "camel-devoxx",
        "provider" : "fabric8",
        "group" : "quickstarts"
      }
    }
  }, {
    "apiVersion" : "v1",
    "kind" : "ReplicationController",
    "metadata" : {
      "annotations" : {
        "fabric8.io/iconUrl" : "img/icons/camel.svg"
      },
      "labels" : {
        "provider" : "fabric8",
        "project" : "camel-devoxx",
        "version" : "1.0-SNAPSHOT",
        "group" : "quickstarts"
      },
      "name" : "camel-devoxx"
    },
    "spec" : {
      "replicas" : 1,
      "selector" : {
        "provider" : "fabric8",
        "project" : "camel-devoxx",
        "version" : "1.0-SNAPSHOT",
        "group" : "quickstarts"
      },
      "template" : {
        "metadata" : {
          "annotations" : { },
          "labels" : {
            "provider" : "fabric8",
            "project" : "camel-devoxx",
            "version" : "1.0-SNAPSHOT",
            "group" : "quickstarts"
          }
        },
        "spec" : {
          "containers" : [ {
            "args" : [ ],
            "command" : [ ],
            "env" : [ {
              "name" : "KUBERNETES_NAMESPACE",
              "valueFrom" : {
                "fieldRef" : {
                  "fieldPath" : "metadata.namespace"
                }
              }
            } ],
            "image" : "fabric8/camel-devoxx:1.0-SNAPSHOT",
            "name" : "camel-devoxx",
            "ports" : [ {
              "containerPort" : 8778,
              "name" : "jolokia"
            } ],
            "resources" : {
              "limits" : {
                "cpu" : "0",
                "memory" : "0"
              },
              "requests" : {
                "cpu" : "0",
                "memory" : "0"
              }
            },
            "securityContext" : { },
            "volumeMounts" : [ ]
          } ],
          "imagePullSecrets" : [ ],
          "nodeSelector" : { },
          "volumes" : [ ]
        }
      }
    }
  } ],
  "parameters" : [ ]
}